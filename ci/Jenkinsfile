def secrets = [ 
  [ 
    path: 'jenkins/harbor_cred', engineVersion:2, secretValues: [ 
        [envVar: 'UN', vaultKey: 'username'], 
        [envVar: 'PS', vaultKey: 'password'],  
    ] 
  ] 
] 
def configuration = [vaultUrl: 'https://vault.idtplateer.com',  vaultCredentialId: 'vault_cred', engineVersion: 2] 

properties([
    parameters([ 
        booleanParam(name: 'InstallPlugin', defaultValue: true, description: 'Check true, if you need to install cm-push plugin'), 
    ])
])

node {
  def app
  def commit_id
  def REGISTRY               = 'harbor.idtplateer.com'
  def HARBOR_NAMESPACE       = 'guestbook'
  def APP_NAME               = 'gb-frontend'
  def HARBOR_CREDENTIAL_NAME = 'harbor-id'


  
  stage('parameters') {
    echo "PARAM1 value is: ${params.PARAM1}"
    echo "PARAM2 value is: ${params.PARAM2}"
    echo "PARAM3 value is: ${params.PARAM3}"
  }
  
  stage('preparation') {
    checkout scm
    sh "git rev-parse --short HEAD > .git/commit-id"
    commit_id = readFile('.git/commit-id').trim()
  }
   
  //dockerfile기반 빌드하는 stage ,git 베이스 소스기준으로 ./guestbook 폴더에 dockerfile 이 있어야 함
  //guestbook 프로젝트에 appName 이 guestbook 으로 이미지가 올라감
  stage('build docker image') { 
    app = docker.build("$REGISTRY/$HARBOR_NAMESPACE/$APP_NAME", "./guestbook")    
  }

  //docker image를 push하는 stage
  //docker.withRegistry 에 harbor-id 는 앞서 설정한 harbor credentials의 ID
  stage('push docker image to registry') {
    docker.withRegistry("https://$REGISTRY", "$HARBOR_CREDENTIAL_NAME") {
      if (app) {
        app.push("latest")
      }
    }                                     
  }
  
  // guestbook helm chart 다운로드 및 정적 테스트
  stage('helm chart download and static test') {
    sh '''#!/bin/bash
          rm -rf projects
          mkdir projects
          cd projects
          git clone https://github.com/kin3303/guestbook.git
          helm lint guestbook
          mv guestbook/.yamllint .yamllint
          helm template my-guestbook guestbook --namespace plateer  | yamllint -
    '''
  }

  stage('helm chart package and upload to registry') {
    withVault([configuration: configuration, vaultSecrets: secrets]) { 
      //sh "helm repo remove  guestbook-repo"
      sh "if ! helm repo ls | grep -q guestbook-repo; then; https://$REGISTRY/chartrepo/guestbook --username=${env.UN} --password=${env.PS} fi"
      //sh "helm repo add guestbook-repo https://$REGISTRY/chartrepo/guestbook --username=${env.UN} --password=${env.PS}" 
      sh "helm package projects/guestbook/"
      if (params.InstallPlugin) {
        //sh "if ! helm plugin ls | grep -q cm-push; then; helm plugin install https://github.com/chartmuseum/helm-push > /dev/null 2>&1 fi"
        //sh "helm plugin install https://github.com/chartmuseum/helm-push > /dev/null 2>&1"
      }
      sh "helm cm-push guestbook-0.1.0.tgz  guestbook-repo --username=${env.UN} --password=${env.PS}" 
      sh "helm repo remove guestbook-repo"
    }
  }    
}
