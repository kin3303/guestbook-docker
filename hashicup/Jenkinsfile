def secrets = [ 
  [ 
    path: 'jenkins/harbor_cred', engineVersion:2, secretValues: [ 
        [envVar: 'UN', vaultKey: 'username'], 
        [envVar: 'PS', vaultKey: 'password'],  
    ] 
  ] 
] 

def configuration = [vaultUrl: 'https://vault.idtplateer.com',  vaultCredentialId: 'vault_cred', engineVersion: 2] 

properties([
    parameters([ 
        booleanParam(name: 'InstallPlugin', defaultValue: true, description: 'Check true, if you need to install cm-push plugin'), 
    ])
])

node {
  def app
  def commit_id
  def REGISTRY               = 'harbor.idtplateer.com'
  def HARBOR_NAMESPACE       = 'hashicup'
  def APP_NAME               = 'gb-frontend'
  def HARBOR_CREDENTIAL_NAME = 'harbor-id'


  
  stage('parameters') {
    echo "PARAM1 value is: ${params.PARAM1}"
    echo "PARAM2 value is: ${params.PARAM2}"
    echo "PARAM3 value is: ${params.PARAM3}"
  }
  
  stage('preparation') {
    checkout scm
    sh "git rev-parse --short HEAD > .git/commit-id"
    commit_id = readFile('.git/commit-id').trim()
  }
 
  // hashicup helm chart 다운로드 및 정적 테스트
  stage('helm chart download and static test') {
    sh '''#!/bin/bash
          rm -rf projects
          mkdir projects
          cd projects
          git clone https://github.com/kin3303/hashicup.git
    '''
  }

  stage('helm chart package and upload to registry') {
    withVault([configuration: configuration, vaultSecrets: secrets]) { 
      sh "if ! (helm repo list | grep -q hashicup-repo); then helm repo add hashicup-repo https://$REGISTRY/chartrepo/hashicup --username=${env.UN} --password=${env.PS}; fi"
      sh "helm package projects/hashicup/"
      if (params.InstallPlugin) {
        sh "if ! helm plugin list | grep -q cm-push; then helm plugin install https://github.com/chartmuseum/helm-push > /dev/null 2>&1; fi"
      }
      sh "helm cm-push hashicup-0.1.0.tgz  hashicup-repo --username=${env.UN} --password=${env.PS}" 
      sh "helm repo remove hashicup-repo"
    }
  }    
}
